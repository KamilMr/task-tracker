services:
  task-tracker:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      migration:
        condition: service_completed_successfully
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      MYSQL_HOST: db
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    stdin_open: true
    tty: true

  migration:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db-init:
        condition: service_completed_successfully
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      MYSQL_HOST: db
    command: pnpm knex migrate:latest --knexfile src/db/knexfile.js

  db:
    container_name: task-tracker-db
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-init:
    image: mysql:8.0
    depends_on:
      db:
        condition: service_healthy
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    entrypoint: >
      sh -c "
        mysql -h db -u root -p${MYSQL_ROOT_PASSWORD} -e \"ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '${MYSQL_ROOT_PASSWORD}'; FLUSH PRIVILEGES;\"
        mysql -h db -u root -p${MYSQL_ROOT_PASSWORD} -e 'CREATE DATABASE IF NOT EXISTS ${MYSQL_DATABASE};'
      "
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data:
